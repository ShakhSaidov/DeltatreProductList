{"version":3,"sources":["server/ProductsList.js","components/ProductStyles.js","components/Product.js","components/ProductList.js","components/NewProductForm.js","App.js","index.js"],"names":["rootUrl","useStyles","makeStyles","theme","appBar","backgroundColor","position","addForm","display","flexDirection","alignItems","width","menuButton","marginRight","spacing","fade","palette","common","white","button","marginBottom","boxShadow","card","height","cardActions","justifyContent","alignContent","cardContent","flexGrow","cardGrid","paddingTop","paddingBottom","center","form","marginTop","search","borderRadius","shape","marginLeft","breakpoints","up","searchIcon","padding","pointerEvents","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","title","warning","ProductInfo","info","value","className","Product","id","product","handleRemove","useState","warnRemoval","setWarnRemoval","styles","productStyles","Card","elevation","CardContent","Typography","component","y","variant","align","name","Box","p","paragraph","description","quantity","CardActions","Button","onClick","event","setTimeout","ProductList","productKeys","products","Container","maxWidth","Grid","container","map","index","item","xs","sm","md","handleAdd","setName","setDescription","setQuantity","duplicate","setDuplicate","onSubmit","preventDefault","find","toLowerCase","TextField","margin","required","fullWidth","label","type","autoComplete","autoFocus","onChange","target","multiline","rows","rowsMax","InputProps","inputProps","min","App","data","setData","addClick","setAddClick","setSearch","Object","keys","filter","key","includes","values","empty","length","useEffect","axios","get","then","response","status","handleAddClick","clicked","AppBar","Toolbar","IconButton","edge","aria-label","noWrap","InputBase","placeholder","classes","root","input","NewProductForm","newProduct","post","addProduct","catch","e","console","log","delete","removeProduct","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7118a03c.chunk.js","sourcesContent":["import axios from \"axios\"\r\nconst rootUrl = \"/products\"\r\n\r\n//make one liner and change name\r\nconst getProducts = () => axios.get(rootUrl).then(response => {\r\n    //console.log(\"Response from getProducts: \", response)\r\n    //console.log(\"Data gotten from getProducts: \", response.data)\r\n    return response\r\n})\r\n\r\nconst addProduct = newProduct => axios.post(rootUrl, newProduct).then(response => {\r\n    //console.log(\"Response from addProduct: \", response)\r\n    //console.log(\"Data gotten from addProduct: \", response.data)\r\n    return response\r\n})\r\n\r\nconst removeProduct = id => axios.delete(`${rootUrl}/${id}`).then(response => {\r\n    //console.log(\"Response from removeProduct: \", response)\r\n    //console.log(\"Data gotten from removeProduct: \", response.data)\r\n    return response\r\n})\r\n\r\nexport {\r\n    getProducts,\r\n    addProduct,\r\n    removeProduct\r\n}","import { fade, makeStyles } from \"@material-ui/core/styles\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appBar: {\r\n        backgroundColor: \"#002c73\",\r\n        position: \"fixed\",\r\n    },\r\n\r\n    addForm: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        width: \"50%\"\r\n    },\r\n\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n        \"&:hover\": {\r\n            backgroundColor: fade(theme.palette.common.white, 0.2),\r\n        },\r\n    },\r\n\r\n    button: {\r\n        marginBottom: theme.spacing(2),\r\n        backgroundColor: \"#006fff\",\r\n\r\n        \"&:hover\": {\r\n            backgroundColor: \"#1990ff\",\r\n            boxShadow: \"0px 0px 4px 1px grey\"\r\n        }\r\n    },\r\n\r\n    card: {\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n    },\r\n\r\n    cardActions: {\r\n        justifyContent: \"center\",\r\n        alignContent: \"center\"\r\n    },\r\n\r\n    cardContent: {\r\n        flexGrow: 1,\r\n    },\r\n\r\n    cardGrid: {\r\n        paddingTop: theme.spacing(10),\r\n        paddingBottom: theme.spacing(2),\r\n    },\r\n\r\n    center: {\r\n        justifyContent: \"center\"\r\n    },\r\n\r\n    form: {\r\n        width: \"100%\",\r\n        marginTop: theme.spacing(10),\r\n    },\r\n\r\n    search: {\r\n        position: \"relative\",\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        \"&:hover\": {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginLeft: 0,\r\n        width: \"100%\",\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            marginLeft: theme.spacing(1),\r\n            width: \"auto\",\r\n        },\r\n    },\r\n\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: \"100%\",\r\n        position: \"absolute\",\r\n        pointerEvents: \"none\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n    },\r\n\r\n    inputRoot: {\r\n        color: \"inherit\",\r\n    },\r\n\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create(\"width\"),\r\n        width: \"100%\",\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            width: \"12ch\",\r\n            \"&:focus\": {\r\n                width: \"20ch\",\r\n            },\r\n        },\r\n    },\r\n\r\n    title: {\r\n        flexGrow: 1,\r\n        display: \"none\",\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            display: \"block\",\r\n        },\r\n    },\r\n\r\n    warning: {\r\n        color: \"#db0000\"\r\n    }\r\n}))\r\n\r\nexport default useStyles","/* eslint-disable linebreak-style */\r\nimport React, { useState } from \"react\"\r\nimport productStyles from \"./ProductStyles\"\r\nimport { Card, CardContent, CardActions, Box, Button, Typography } from \"@material-ui/core\"\r\n\r\nconst ProductInfo = ({ info, value }) => {\r\n    return (\r\n        <div>\r\n            <b>{info}: </b>\r\n            {\r\n                info === \"Description\"\r\n                    ? <div className=\"descriptionBox\"> {value} </div>\r\n                    : value\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Product = ({ id, product, handleRemove }) => {\r\n    const [warnRemoval, setWarnRemoval] = useState(false)\r\n    const styles = productStyles()\r\n\r\n    const confirmRemove = () => {\r\n        setWarnRemoval(true)\r\n        setTimeout(() => {\r\n            setWarnRemoval(false)\r\n        }, 5000)\r\n    }\r\n\r\n    if (product) {\r\n        return (\r\n            <Card elevation={3} className={styles.card}>\r\n                <CardContent className={styles.cardContent}>\r\n                    <Typography component={\"div\"} y variant=\"h4\" align=\"center\"> <b>{product.name}</b> </Typography>\r\n                    <Box p={2}>\r\n                        <Typography component={\"div\"} variant=\"h6\" paragraph=\"true\">\r\n                            <ProductInfo info=\"Description\" value={product.description} />\r\n                        </Typography>\r\n\r\n                        <Typography component={\"div\"} variant=\"h6\">\r\n                            <ProductInfo info=\"Qty. Available\" value={product.quantity} />\r\n                        </Typography>\r\n                    </Box>\r\n                </CardContent>\r\n\r\n                <CardContent className={styles.warning}>\r\n                    <Typography component={\"div\"} y variant=\"h6\" align=\"center\">\r\n                        {warnRemoval ? \"Are you sure?\" : null}\r\n                    </Typography>\r\n                </CardContent>\r\n\r\n                <CardActions className={styles.cardActions}>\r\n                    <Button\r\n                        className={styles.button} variant=\"contained\"\r\n                        color=\"primary\" value={id}\r\n                        onClick={(event) => {\r\n                            if (!warnRemoval) confirmRemove()\r\n                            else handleRemove(event, id)\r\n                        }}>\r\n                        Remove\r\n                    </Button>\r\n                </CardActions>\r\n            </Card>\r\n        )\r\n    } else return null\r\n}\r\n\r\nexport default Product","/* eslint-disable linebreak-style */\r\nimport { Container, Grid } from \"@material-ui/core\"\r\nimport React from \"react\"\r\nimport Product from \"./Product\"\r\nimport useStyles from \"./ProductStyles\"\r\n\r\nconst ProductList = ({ productKeys, products, handleRemove }) => {\r\n    const styles = useStyles()\r\n\r\n    if (products && productKeys) {\r\n        return (\r\n            <Container className={styles.cardGrid} maxWidth=\"lg\">\r\n                <Grid container spacing={5}>\r\n                    {productKeys.map((id, index) => {\r\n                        return (\r\n                            <Grid item key={id} xs={12} sm={6} md={4}>\r\n                                <Product\r\n                                    key={id}\r\n                                    id={id}\r\n                                    product={products[index]}\r\n                                    handleRemove={handleRemove}\r\n                                />\r\n                            </Grid>\r\n                        )\r\n                    })}\r\n                </Grid>\r\n            </Container>\r\n        )\r\n    } else return null\r\n}\r\n\r\nexport default ProductList","import React, { useState } from \"react\"\r\nimport { Button, Container, TextField, Typography } from \"@material-ui/core\"\r\nimport PropTypes from \"prop-types\"\r\nimport useStyles from \"./ProductStyles\"\r\n\r\nconst Product = ({ handleAdd, products }) => {\r\n    const [name, setName] = useState(\"\")\r\n    const [description, setDescription] = useState(\"\")\r\n    const [quantity, setQuantity] = useState(\"\")\r\n    const [duplicate, setDuplicate] = useState(false)\r\n    const styles = useStyles()\r\n\r\n    const handleNameChange = event => setName(event.target.value)\r\n    const handleDescriptionChange = event => setDescription(event.target.value)\r\n    const handleQuantityChange = event => setQuantity(event.target.value)\r\n\r\n    const addProduct = event => {\r\n        event.preventDefault()\r\n        if (!products.find(product => product.name.toLowerCase() === name.toLowerCase())) {\r\n            handleAdd({\r\n                name: name,\r\n                description: description,\r\n                quantity: quantity,\r\n            })\r\n\r\n            setName(\"\")\r\n            setDescription(\"\")\r\n            setQuantity(\"\")\r\n        } else {\r\n            setDuplicate(true)\r\n            setTimeout(() => {\r\n                setDuplicate(false)\r\n            }, 5000)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container className={styles.addForm}>\r\n            <form className={styles.form} onSubmit={addProduct}>\r\n                <Container className={styles.warning}>\r\n                    <Typography component={\"div\"} y variant=\"h6\" align=\"center\">\r\n                        {duplicate ? \"Name already exists in the list!\" : null}\r\n                    </Typography>\r\n                </Container>\r\n\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"name\"\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    type=\"text\"\r\n                    autoComplete=\"name\"\r\n                    autoFocus\r\n                    value={name}\r\n                    onChange={handleNameChange}\r\n                />\r\n\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"description\"\r\n                    label=\"Description\"\r\n                    name=\"description\"\r\n                    type=\"text\"\r\n                    multiline\r\n                    rows={2}\r\n                    rowsMax={4}\r\n                    autoComplete=\"Description\"\r\n                    autoFocus\r\n                    value={description}\r\n                    onChange={handleDescriptionChange}\r\n                />\r\n\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"quantity\"\r\n                    label=\"Quantity\"\r\n                    name=\"quantity\"\r\n                    type=\"number\"\r\n                    InputProps={{\r\n                        inputProps: {\r\n                            min: 0\r\n                        }\r\n                    }}\r\n                    autoComplete=\"name\"\r\n                    autoFocus\r\n                    value={quantity}\r\n                    onChange={handleQuantityChange}\r\n                />\r\n\r\n                <Button\r\n                    className={styles.button}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    fullWidth>\r\n                    Add Product\r\n                </Button>\r\n            </form>\r\n        </Container>\r\n    )\r\n}\r\n\r\nProduct.propTypes = {\r\n    handleAdd: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Product","/* eslint-disable linebreak-style */\nimport React, { useState, useEffect } from \"react\"\nimport { getProducts, addProduct, removeProduct } from \"./server/ProductsList\"\nimport ProductList from \"./components/ProductList\"\nimport NewProductForm from \"./components/NewProductForm\"\n//import Message from \"./components/Message\"\n//import Switch from \"./components/Switch\"\nimport \"./App.css\"\nimport productStyles from \"./components/ProductStyles\"\nimport { AppBar, Toolbar, Typography, InputBase, IconButton } from \"@material-ui/core\"\nimport SearchIcon from \"@material-ui/icons/Search\"\nimport AddIcon from \"@material-ui/icons/Add\"\nimport RemoveIcon from \"@material-ui/icons/Remove\"\n\nconst App = () => {\n    const [data, setData] = useState({})\n    const [addClick, setAddClick] = useState()\n    const [search, setSearch] = useState(\"\")\n    const styles = productStyles()\n\n    let productKeys = Object.keys(data).filter(key => data[key].name.toLowerCase().includes(search.toLowerCase()))\n    let products = Object.values(data).filter(product => product.name.toLowerCase().includes(search.toLowerCase()))\n    let empty = products.length === 0 ? true : false\n\n    useEffect(() => {\n        getProducts()\n            .then(response => {\n                if (response.status !== 304) setData(response.data)\n            })\n    }, [data])\n\n    const handleAddClick = clicked => setAddClick(clicked)\n\n    const handleSearch = event => setSearch(event.target.value)\n\n    const handleAdd = newProduct => {\n        addProduct(newProduct)\n            .then(response => setData(response.data))\n            .catch(e => console.log(e))\n    }\n\n    const handleRemove = (event, id) => {\n        event.preventDefault()\n        removeProduct(id)\n            .then(response => {\n                if (response.status === 204) setData(data)\n            })\n            .catch(e => console.log(e))\n\n    }\n\n    return (\n        <div className={styles.cardContent}>\n            <AppBar className={styles.appBar}>\n                <Toolbar >\n\n                    <IconButton\n                        edge=\"start\"\n                        className={styles.menuButton}\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={() => {\n                            if (addClick) handleAddClick(false)\n                            else handleAddClick(true)\n                        }}\n                    >\n                        {!addClick\n                            ?\n                            <AddIcon />\n                            :\n                            <RemoveIcon />\n                        }\n                    </IconButton>\n\n                    {!empty\n                        ?\n                        <Typography className={styles.title} component={\"div\"} variant=\"h5\" noWrap>\n                            <b> Product List </b>\n                        </Typography>\n                        :\n                        <Typography className={styles.title} component={\"div\"} variant=\"h5\" noWrap>\n                            <b> Nothing Found! Maybe add some? </b>\n                        </Typography>\n                    }\n\n                    <div className={styles.search}>\n                        <div className={styles.searchIcon}> <SearchIcon /> </div>\n                        <InputBase\n                            placeholder=\"Search…\"\n                            classes={{\n                                root: styles.inputRoot,\n                                input: styles.inputInput,\n                            }}\n                            inputProps={{ \"aria-label\": \"search\" }}\n                            value={search}\n                            onChange={handleSearch}\n                        />\n                    </div>\n                </Toolbar>\n            </AppBar>\n\n            {addClick && <NewProductForm handleAdd={handleAdd} products={products} />}\n\n            {data &&\n                <ProductList\n                    productKeys={productKeys}\n                    products={products}\n                    handleRemove={handleRemove}\n                />\n            }\n        </div>\n    )\n}\n\nexport default App","/* eslint-disable linebreak-style */\nimport React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)"],"sourceRoot":""}