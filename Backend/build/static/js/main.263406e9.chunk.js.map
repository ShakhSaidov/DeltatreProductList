{"version":3,"sources":["server/ProductsList.js","components/product/product.js","components/product_list/product_list.js","components/new_product_form/new_product_form.js","App.js","index.js"],"names":["rootUrl","axios","defaults","validateStatus","status","useStyles","makeStyles","theme","button","marginBottom","spacing","backgroundColor","boxShadow","card","height","display","flexDirection","cardActions","justifyContent","alignContent","cardContent","flexGrow","warning","color","ProductInfo","info","value","className","Product","product","handleRemove","useState","warnRemoval","setWarnRemoval","styles","Card","id","elevation","CardContent","Typography","component","variant","align","name","Box","p","paragraph","description","quantity","CardActions","Button","onClick","event","setTimeout","cardGrid","paddingTop","paddingBottom","ProductList","products","Container","maxWidth","Grid","container","map","item","xs","sm","md","addForm","alignItems","width","form","marginTop","handleAdd","setProduct","duplicate","setDuplicate","onSubmit","preventDefault","find","toLowerCase","TextField","margin","required","fullWidth","label","type","inputProps","autoComplete","autoFocus","onChange","target","multiline","rows","rowsMax","min","appBar","position","menuButton","marginRight","fade","palette","common","white","search","borderRadius","shape","marginLeft","breakpoints","up","searchIcon","padding","pointerEvents","inputRoot","inputInput","paddingLeft","transition","transitions","create","title","loadingButton","left","top","App","etag","session","setSession","loading","setLoading","addClick","setAddClick","setSearch","filter","includes","useEffect","a","head","headers","then","response","headResponse","get","getResponse","data","console","log","getData","handleAddClick","clicked","CircularProgress","size","AppBar","Toolbar","IconButton","edge","aria-label","length","noWrap","InputBase","placeholder","classes","root","input","newProduct","post","addProduct","catch","e","delete","removeProduct","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.263406e9.chunk.js","sourcesContent":["import axios from \"axios\"\r\nconst rootUrl = \"/products\"\r\n\r\n//use so that status codes below 400 don't get considered as error\r\naxios.defaults.validateStatus = () => {\r\n    return status < 400\r\n}\r\n\r\nconst checkProducts = etag => axios\r\n    .head(rootUrl, { headers: { \"if-none-match\": etag } })\r\n    .then(response => response)\r\n\r\n//get request for the products list\r\nconst getProducts = () => axios.get(rootUrl).then(response => response)\r\n\r\n//post request for a new product\r\nconst addProduct = newProduct => axios.post(rootUrl, newProduct).then(response => response)\r\n\r\n//delete request for an existing product\r\nconst removeProduct = id => axios.delete(`${rootUrl}/${id}`).then(response => response)\r\n\r\nexport {\r\n    checkProducts,\r\n    getProducts,\r\n    addProduct,\r\n    removeProduct\r\n}","/* eslint-disable linebreak-style */\r\nimport React, { useState } from \"react\"\r\nimport { Card, CardContent, CardActions, Box, Button, Typography } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\n\r\n//Custom styles to display the product\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        marginBottom: theme.spacing(2),\r\n        backgroundColor: \"#006fff\",\r\n\r\n        \"&:hover\": {\r\n            backgroundColor: \"#1990ff\",\r\n            boxShadow: \"0px 0px 4px 1px grey\"\r\n        }\r\n    },\r\n\r\n    card: {\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n    },\r\n\r\n    cardActions: {\r\n        justifyContent: \"center\",\r\n        alignContent: \"center\"\r\n    },\r\n\r\n    cardContent: {\r\n        flexGrow: 1,\r\n    },\r\n\r\n    warning: {\r\n        color: \"#db0000\"\r\n    }\r\n}))\r\n\r\n//Component that displays product info (name, description, quantity)\r\nconst ProductInfo = ({ info, value }) => {\r\n    return (\r\n        <div>\r\n            <b>{info}: </b>\r\n            {   info === \"Description\"\r\n                ? <div className=\"descriptionBox\"> {value} </div>\r\n                : value\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n//Component that displays the whole product\r\nconst Product = ({ product, handleRemove }) => {\r\n    const [warnRemoval, setWarnRemoval] = useState(false)           //shows a warning when a user tries to remove a product\r\n    const styles = useStyles()\r\n\r\n    //A temporary warning sign will be shown for 5 seconds when a user tries to remove a product\r\n    const confirmRemove = () => {\r\n        setWarnRemoval(true)\r\n        setTimeout(() => {\r\n            setWarnRemoval(false)\r\n        }, 5000)\r\n    }\r\n\r\n    if (product) {\r\n        return (\r\n            <Card id=\"productCard\" elevation={3} className={styles.card}>\r\n                <CardContent className={styles.cardContent}>\r\n                    <Typography id=\"productCardName\" component={\"div\"} variant=\"h4\" align=\"center\"> <b>{product.name}</b> </Typography>\r\n                    <Box p={2}>\r\n                        <Typography id=\"productCardDescription\" component={\"div\"} variant=\"h6\" paragraph={true}>\r\n                            <ProductInfo info=\"Description\" value={product.description} />\r\n                        </Typography>\r\n\r\n                        <Typography id=\"productCardQuantity\" component={\"div\"} variant=\"h6\">\r\n                            <ProductInfo info=\"Qty. Available\" value={product.quantity} />\r\n                        </Typography>\r\n                    </Box>\r\n                </CardContent>\r\n\r\n                <CardContent className={styles.warning}>\r\n                    <Typography component={\"div\"} variant=\"h6\" align=\"center\">\r\n                        {warnRemoval ? \"Are you sure?\" : null}\r\n                    </Typography>\r\n                </CardContent>\r\n\r\n                <CardActions className={styles.cardActions}>\r\n                    <Button\r\n                        id=\"productRemoveButton\"\r\n                        className={styles.button} variant=\"contained\"\r\n                        color=\"primary\" value={product.id}\r\n                        onClick={(event) => {\r\n                            if (!warnRemoval) confirmRemove()\r\n                            else {\r\n                                handleRemove(event, product.id)\r\n                                setWarnRemoval(false)\r\n                            }\r\n                        }}>\r\n                        Remove\r\n                    </Button>\r\n                </CardActions>\r\n            </Card>\r\n        )\r\n    } else return null\r\n}\r\n\r\nexport default Product","/* eslint-disable linebreak-style */\r\nimport { Container, Grid } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport React from \"react\"\r\nimport Product from \"../product/product\"\r\n\r\n//Custom styling for the product list\r\nconst useStyles = makeStyles((theme) => ({\r\n    cardGrid: {\r\n        paddingTop: theme.spacing(10),\r\n        paddingBottom: theme.spacing(2),\r\n    }\r\n}))\r\n\r\n//Component that renders the entire product list as a grid\r\nconst ProductList = ({ products, handleRemove }) => {\r\n    const styles = useStyles()\r\n\r\n    if (products) {\r\n        return (\r\n            <Container className={styles.cardGrid} maxWidth=\"lg\">\r\n                <Grid container spacing={5}>\r\n                    {products.map(product => {\r\n                        return (\r\n                            <Grid item key={product.id} xs={12} sm={6} md={4}>\r\n                                <Product\r\n                                    key={product.id}\r\n                                    product={product}\r\n                                    handleRemove={handleRemove}\r\n                                />\r\n                            </Grid>\r\n                        )\r\n                    })}\r\n                </Grid>\r\n            </Container>\r\n        )\r\n    } else return null\r\n}\r\n\r\nexport default ProductList","import React, { useState } from \"react\"\r\nimport { Button, Container, TextField, Typography } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport PropTypes from \"prop-types\"\r\n\r\n//Custom styling for the product form\r\nconst useStyles = makeStyles((theme) => ({\r\n    addForm: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        width: \"50%\"\r\n    },\r\n\r\n    button: {\r\n        marginBottom: theme.spacing(2),\r\n        backgroundColor: \"#006fff\",\r\n\r\n        \"&:hover\": {\r\n            backgroundColor: \"#1990ff\",\r\n            boxShadow: \"0px 0px 4px 1px grey\"\r\n        }\r\n    },\r\n\r\n    form: {\r\n        width: \"100%\",\r\n        marginTop: theme.spacing(10),\r\n    },\r\n\r\n    warning: {\r\n        color: \"#db0000\"\r\n    }\r\n}))\r\n\r\n//Component that displays the product form and handles addition of new products\r\nconst Product = ({ handleAdd, products }) => {\r\n    const [product, setProduct] = useState({ name: \"\", description: \"\", quantity: \"\" })\r\n    const [duplicate, setDuplicate] = useState(false)\r\n    const styles = useStyles()\r\n\r\n    const handleNameChange = event => setProduct({ ...product, name: event.target.value })\r\n    const handleDescriptionChange = event => setProduct({ ...product, description: event.target.value })\r\n    const handleQuantityChange = event => setProduct({ ...product, quantity: event.target.value })\r\n\r\n    //Checks if the name is not a duplicate, and calls the addProduct function\r\n    const addProduct = event => {\r\n        event.preventDefault()\r\n        if (!products.find(p => p.name.toLowerCase() === product[\"name\"].toLowerCase())) {\r\n            handleAdd({ ...product })\r\n            setProduct(({ name: \"\", description: \"\", quantity: \"\" }))\r\n        } else {\r\n            setDuplicate(true)\r\n            setTimeout(() => {\r\n                setDuplicate(false)\r\n            }, 5000)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container className={styles.addForm}>\r\n            <form className={styles.form} onSubmit={addProduct}>\r\n                <Container className={styles.warning}>\r\n                    <Typography component={\"div\"} variant=\"h6\" align=\"center\">\r\n                        {duplicate ? \"Name already exists in the list!\" : null}\r\n                    </Typography>\r\n                </Container>\r\n\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"productName\"\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    type=\"text\"\r\n                    inputProps={{ \"data-testid\": \"Name\" }}\r\n                    autoComplete=\"name\"\r\n                    autoFocus\r\n                    value={product[\"name\"]}\r\n                    onChange={handleNameChange}\r\n                />\r\n\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"productDescription\"\r\n                    label=\"Description\"\r\n                    name=\"description\"\r\n                    type=\"text\"\r\n                    inputProps={{ \"data-testid\": \"Description\" }}\r\n                    multiline\r\n                    rows={2}\r\n                    rowsMax={4}\r\n                    autoComplete=\"Description\"\r\n                    autoFocus\r\n                    value={product[\"description\"]}\r\n                    onChange={handleDescriptionChange}\r\n                />\r\n\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"productQuantity\"\r\n                    label=\"Quantity\"\r\n                    name=\"quantity\"\r\n                    type=\"number\"\r\n                    inputProps={{ \"data-testid\": \"Quantity\", min: 0 }}\r\n                    autoComplete=\"name\"\r\n                    autoFocus\r\n                    value={product[\"quantity\"]}\r\n                    onChange={handleQuantityChange}\r\n                />\r\n\r\n                <Button\r\n                    id=\"productAddButton\"\r\n                    className={styles.button}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    fullWidth>\r\n                    Add Product\r\n                </Button>\r\n            </form>\r\n        </Container>\r\n    )\r\n}\r\n\r\nProduct.propTypes = {\r\n    handleAdd: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Product","/* eslint-disable linebreak-style */\nimport React, { useState, useEffect } from \"react\"\nimport { checkProducts, getProducts, addProduct, removeProduct } from \"./server/ProductsList\"\nimport ProductList from \"./components/product_list/product_list\"\nimport NewProductForm from \"./components/new_product_form/new_product_form\"\nimport SearchIcon from \"@material-ui/icons/Search\"\nimport AddIcon from \"@material-ui/icons/Add\"\nimport RemoveIcon from \"@material-ui/icons/Remove\"\nimport { AppBar, Toolbar, Typography, InputBase, IconButton, CircularProgress } from \"@material-ui/core\"\nimport { fade, makeStyles } from \"@material-ui/core/styles\"\n\n//Custom styling for the entire page\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        backgroundColor: \"#002c73\",\n        position: \"fixed\",\n    },\n\n    menuButton: {\n        marginRight: theme.spacing(2),\n        \"&:hover\": {\n            backgroundColor: fade(theme.palette.common.white, 0.2),\n        },\n    },\n\n    cardContent: {\n        flexGrow: 1,\n    },\n\n\n    search: {\n        position: \"relative\",\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        \"&:hover\": {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginLeft: 0,\n        width: \"100%\",\n        [theme.breakpoints.up(\"sm\")]: {\n            marginLeft: theme.spacing(1),\n            width: \"auto\",\n        },\n    },\n\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: \"100%\",\n        position: \"absolute\",\n        pointerEvents: \"none\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    },\n\n    inputRoot: {\n        color: \"inherit\",\n    },\n\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create(\"width\"),\n        width: \"100%\",\n        [theme.breakpoints.up(\"sm\")]: {\n            width: \"12ch\",\n            \"&:focus\": {\n                width: \"20ch\",\n            },\n        },\n    },\n\n    title: {\n        flexGrow: 1,\n        display: \"none\",\n        [theme.breakpoints.up(\"sm\")]: {\n            display: \"block\",\n        },\n    },\n\n    loadingButton: {\n        position: \"absolute\",\n        left: \"50%\",\n        top: \"50%\",\n        color: \"#002c73\",\n        margin: \"auto\",\n    }\n}))\n\nconst App = () => {\n    const [session, setSession] = useState({ products: [], etag: \"\" })\n    const [loading, setLoading] = useState(true)\n    const [addClick, setAddClick] = useState()\n    const [search, setSearch] = useState(\"\")\n    const styles = useStyles()\n\n    let products = session[\"products\"].filter(product => product.name.toLowerCase().includes(search.toLowerCase()))\n\n    //renders the page whenever etag changes\n    useEffect(() => {\n        const getData = async () => {\n            try {\n                //console.log(\"Entered useEffect\")\n                const headResponse = await checkProducts(session[\"etag\"])\n                //console.log(\"checkProducts response: \", headResponse)\n                //console.log(\"headRequest status and type is: \", headResponse.status, typeof headResponse.status)\n\n                if (headResponse.status !== 304) {\n                    const getResponse = await getProducts()\n                    //console.log(\"getProducts response: \", getResponse)\n                    //console.log(\"Setting Etag to the one from GET: \", getResponse.headers[\"etag\"])\n                    //console.log(\"Mounted before GET etag: \", mounted)\n                    //console.log(\"Setting Data to: \", getResponse.data)\n                    setSession({\n                        products: getResponse.data,\n                        etag: getResponse.headers[\"etag\"]\n                    })\n                    setLoading(false)\n                }\n\n                else {\n                    //console.log(\"Setting Etag to the one from HEAD: \", headResponse.headers[\"etag\"])\n                    //console.log(\"Mounted before HEAD etag: \", mounted)\n                    setSession({ ...session, etag: headResponse.headers[\"etag\"] })\n                }\n            } catch (error) { console.log(error) }\n\n            if (loading) setLoading(false)\n        }\n\n        getData()\n    }, [session])\n\n    const handleAddClick = clicked => setAddClick(clicked)\n\n    const handleSearch = event => setSearch(event.target.value)\n\n    //requests to add a new product onto the list\n    const handleAdd = newProduct => {\n        addProduct(newProduct)\n            .then(response => {\n                //console.log(\"Response after addition \", response)\n                setSession({ ...session, etag: response.headers[\"etag\"] })\n            })\n            .catch(e => console.log(e))\n    }\n\n    //requests to delete an existing product from the list\n    const handleRemove = (event, id) => {\n        event.preventDefault()\n        removeProduct(id)\n            .then(response => {\n                //console.log(\"Response after remove \", response)\n                setSession({ ...session, etag: response.headers[\"etag\"] })\n            })\n            .catch(e => console.log(e))\n    }\n\n    if (!loading) {\n        return (\n            <div className={styles.cardContent}>\n                <AppBar className={styles.appBar}>\n                    <Toolbar >\n                        <IconButton\n                            edge=\"start\"\n                            className={styles.menuButton}\n                            id=\"iconButton\"\n                            color=\"inherit\"\n                            aria-label=\"open drawer\"\n                            onClick={() => {\n                                if (addClick) handleAddClick(false)\n                                else handleAddClick(true)\n                            }}\n                        >\n                            {!addClick\n                                ?\n                                <AddIcon />\n                                :\n                                <RemoveIcon />\n                            }\n                        </IconButton>\n\n\n                        {products.length !== 0\n                            ?\n                            <Typography className={styles.title} component={\"div\"} variant=\"h5\" noWrap>\n                                <b> Product List </b>\n                            </Typography>\n                            :\n                            <Typography className={styles.title} component={\"div\"} variant=\"h5\" noWrap>\n                                <b> Nothing Found! Maybe add some? </b>\n                            </Typography>\n                        }\n\n                        <div className={styles.search}>\n                            <div className={styles.searchIcon}> <SearchIcon /> </div>\n                            <InputBase\n                                id=\"productSearch\"\n                                placeholder=\"Search…\"\n                                classes={{\n                                    root: styles.inputRoot,\n                                    input: styles.inputInput,\n                                }}\n                                inputProps={{ \"aria-label\": \"search\" }}\n                                value={search}\n                                onChange={handleSearch}\n                            />\n                        </div>\n                    </Toolbar>\n                </AppBar>\n\n                {addClick && <NewProductForm handleAdd={handleAdd} products={products} />}\n\n                {session[\"products\"] &&\n                    <ProductList\n                        id=\"productList\"\n                        products={products}\n                        handleRemove={handleRemove}\n                    />\n                }\n            </div>\n        )\n    } else return (<CircularProgress size={100} className={styles.loadingButton} />)\n}\n\nexport default App\n","/* eslint-disable linebreak-style */\nimport React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)"],"sourceRoot":""}